<?php

namespace App\Controller\Admin;

use App\Controller\Admin\Field\DossierCandidatField;
use App\Entity\Scraping;
use EasyCorp\Bundle\EasyAdminBundle\Config\Action;
use EasyCorp\Bundle\EasyAdminBundle\Config\Actions;
use EasyCorp\Bundle\EasyAdminBundle\Config\Crud;
use EasyCorp\Bundle\EasyAdminBundle\Context\AdminContext;
use EasyCorp\Bundle\EasyAdminBundle\Controller\AbstractCrudController;
use EasyCorp\Bundle\EasyAdminBundle\Field\DateTimeField;
use EasyCorp\Bundle\EasyAdminBundle\Field\TextField;

class ScrapingCrudController extends AbstractCrudController
{
    public static function getEntityFqcn(): string
    {
        return Scraping::class;
    }

    public function configureFields(string $pageName): iterable
    {
        return [
            TextField::new('user'),
            DateTimeField::new('date'),
            DossierCandidatField::new('statutDossier')
        ];
    }

    public function configureActions(Actions $actions): Actions
    {
        $viewScraping = Action::new('scraping', 'Visualiser scraping')
            ->linkToCrudAction('viewScraping')
        ;

        $actions
            ->add(Crud::PAGE_INDEX, $viewScraping);


        return parent::configureActions($actions); // TODO: Change the autogenerated stub
    }

    public function viewScraping(AdminContext $context)
    {
        /** @var Scraping $scraping */
        $scraping = $context->getEntity()->getInstance();

        return $this->redirectToRoute('admin_user_scraping', ['id' => $scraping->getId()]);
    }

    public function configureCrud(Crud $crud): Crud
    {
        return $crud->setEntityLabelInPlural('Scrapings')
            ->setEntityLabelInSingular("Scrapingt")
            ;
    }
}
